{"version":3,"sources":["Utils/Constants.js","context/auth-context.js","Utils/ProtectedRoute.js","context/AuthContext.js","images/INKY.png","pages/LoginPage.js","components/NavBar.js","pages/BanPage.js","Utils/DeviceDetect.js","pages/HomePage.js","pages/ProfilePage.js","pages/GameLobbyPage.js","components/GameComponents/weights.js","components/GameComponents/colors.js","components/GameComponents/ColorBox.js","components/GameComponents/Canvas.js","components/GameComponents/WordsModal.js","components/GameComponents/CanvasContainer.js","components/GameComponents/ChatMessage.js","components/GameComponents/ChatBox.js","components/GameComponents/PlayerContainer.js","components/GameComponents/PlayerSidebar.js","components/GameComponents/Timer.js","pages/GamePage.js","pages/GameEndingPage.js","pages/Game.js","pages/AdminPage.js","App.js","reportWebVitals.js","index.js"],"names":["constants","require","createBootstrapComponent","DISCONNECTED","CONNECTED","KICKED","GAME_ENDED","IN_LOBBY","IN_GAME","GAME_DISCONNECTED","ERR","SERVER_URL","AuthContext","createContext","AuthProvider","children","useState","authenticated","auth","setAuth","useEffect","getUserInfo","fetch","method","credentials","headers","Accept","then","response","status","json","Error","responseJson","user","catch","error","authContextValue","logout","window","open","Provider","value","useAuth","React","useContext","ProtectedRoute","RouteComponent","component","rest","Fragment","render","props","to","Component","authCreds","this","className","src","logo","Button","onClick","showHome","variant","history","profile","showCreateGame","createGameClick","role","report","DeviceDetect","isMobile","setMobile","userAgent","navigator","mobile","Boolean","match","HomePage","state","gameCode","showRoomNotFound","joinButtonTarget","createRef","handleGameCodeChange","bind","handleJoinGameClicked","handleCreateGameClicked","id","name","location","pathname","code","push","console","log","body","JSON","stringify","userID","res","res_json","success","setState","gameErrorMessage","message","setTimeout","err","e","target","ban","profileKey","alt","InputGroup","style","maxWidth","margin","FormControl","disabled","placeholder","onChange","aria-label","Append","ref","Overlay","show","placement","onClose","Popover","Content","Accordion","defaultActiveKey","Card","Header","Toggle","as","eventKey","Collapse","Body","userUsername","userImageDisplay","imageWebLink","modalShow","userImageDisplayIndex","usernameChange","handleSubmit","handleProfilePicture","setModalShow","handleProfilePick","event","pokemonImgList","i","dialog","showAlert","see","type","Modal","onHide","Footer","GameLobbyPage","numRounds","settings","rounds","drawingTime","draw_time","customWords","roomLink","params","lobbyID","numRoundsOptions","drawingTimeOptions","roomLinkValue","handleNumRoundsChange","handleDrawingTimeChange","handleCustomWordChange","handleCopyClicked","startGame","kickPlayerClicked","kick","socket","on","setting","playerId","off","emit","clipboard","writeText","length","split","options","map","index","count","players","forEach","player","disconnected","playerID","parentNode","lobby_id","textAlign","paddingBottom","Form","Group","Row","Label","column","sm","Col","Control","isHost","renderSelectOptions","Text","File","padding","Input","readOnly","onMouseOver","onMouseOut","el","roomLinkText","dvariant","hostId","withRouter","weights","colors","ColorBox","preventDefault","changeColor","colorVal","backgroundColor","Canvas","Sketch","sketch","setup","createCanvas","myRef","current","offsetWidth","offsetHeight","draw","start","background","w","width","h","height","strokes","stroke","strokeWeight","weight","color","line","x1","y1","x2","y2","reset","clear","strokeCap","p5","ROUND","mouseDragged","drawing","round_state","msg","pmouseX","pmouseY","mouseX","mouseY","onNewDrawing","windowResized","resizeCanvas","colorOptionOnClick","strokeOptionClick","parseInt","eraser","clearCanvas","myP5","col","borderRadius","renderColorOptions","renderStrokeOptions","WordsModal","handleClick","word","display","Title","isArtist","artistName","words","CanvasContainer","drawer","word_list","ChatMessage","content","ChatBox","currentMessage","messageLog","handleChange","lobby","ok","Promise","reject","fetchChats","chatLog","onSubmit","PlayerContainer","showReportModal","showReportPopover","cheating","verbalAbuse","inappropriateName","cardRef","reportPlayer","initiateReportPlayer","renderReportModal","renderReportOverlay","playerState","closeButton","Check","label","cursor","border","bg","getVariant","score","PlayerSidebar","sort","a","b","Timer","timer","time","setTime","new_time","GamePage","hint","getRoundStatus","withAuth","GameEndingPage","usersInLobby","sortWinner","playAgainClicked","leaveClicked","arr","j","temp","reverse","displayarray","Img","slice","Game","host","io","connect","onJoin","once","data","host_info","prevState","obj","user_id","Object","assign","new_state","reason","disconnect","pageManager","MyOverlay","size","aria-labelledby","centered","title","islog","element","actionforyes","document","actionforno","chatLogFunc","option","clearMesFunc","AdminPage","messages","documents","reasons","dates","lobbyIDs","deleteReport","gettingReport","banPlayer","getChatLog","clearMessages","date","documentID","card","Date","getFullYear","getMonth","getDate","App","exact","path","LoginPage","BanPage","ProfilePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c411bb90.chunk.js","sourcesContent":["const {\n  createBootstrapComponent,\n} = require(\"react-bootstrap/esm/ThemeProvider\");\n\n// Player states\nconst DISCONNECTED = 0;\nconst CONNECTED = 1;\nconst KICKED = 2;\n\n// Game states\nconst GAME_ENDED = 0;\nconst IN_LOBBY = 1;\nconst IN_GAME = 2;\nconst GAME_DISCONNECTED = 3;\n\nconst ERR = -1;\n\nconst constants = {\n  DISCONNECTED: DISCONNECTED,\n  CONNECTED: CONNECTED,\n  KICKED: KICKED,\n  GAME_ENDED: GAME_ENDED,\n  IN_LOBBY: IN_LOBBY,\n  IN_GAME: IN_GAME,\n  GAME_DISCONNECTED: GAME_DISCONNECTED,\n  ERR: ERR,\n};\n\nexport default constants;\n\nexport const SERVER_URL =\n  process.env.NODE_ENV !== \"production\" ? \"http://localhost:8888\" : \"\";\n","import React, { createContext, useState, useEffect } from \"react\";\nimport { SERVER_URL } from \"../Utils/Constants\";\nconst AuthContext = createContext(null);\n\nconst AuthProvider = ({ children }) => {\n  const [auth, setAuth] = useState({\n    authenticated: false,\n  });\n\n  useEffect(() => {\n    getUserInfo();\n  }, []);\n\n  const logout = () => {\n    window.open(SERVER_URL + \"/auth/logout\", \"_self\");\n    setAuth({\n      authenticated: false,\n    });\n  };\n\n  const getUserInfo = () => {\n    fetch(SERVER_URL + \"/auth/login/success\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Credentials\": true,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"failed to authenticate user\");\n      })\n      .then((responseJson) => {\n        setAuth({\n          authenticated: true,\n          user: responseJson.user,\n        });\n      })\n      .catch((error) => {\n        setAuth({\n          authenticated: false,\n          error: \"Failed to authenticated user\",\n        });\n      });\n  };\n\n  const authContextValue = {\n    auth,\n    logout,\n    getUserInfo,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nconst useAuth = () => React.useContext(AuthContext);\n\nfunction withAuth(Component) {\n  return function WrappedComponent(props) {\n    const authCreds = useAuth();\n    return <Component {...props} authCreds={authCreds} />;\n  };\n}\n\nexport { useAuth, AuthProvider, withAuth };\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth-context\";\n\nfunction ProtectedRoute({ component: RouteComponent, ...rest }) {\n  const { auth } = useAuth();\n  return (\n    <React.Fragment>\n      <Route\n        {...rest}\n        render={(props) =>\n          auth.authenticated ? (\n            <RouteComponent {...props} />\n          ) : (\n            <Redirect to={\"/login\"} />\n          )\n        }\n      />\n    </React.Fragment>\n  );\n}\n\nexport default ProtectedRoute;\n","import { useAuth } from \"../context/auth-context\";\n\nexport default function AuthContext(Component) {\n  return function WrappedComponent(props) {\n    const authCreds = useAuth();\n    return <Component {...props} authCreds={authCreds} />;\n  };\n}\n","export default __webpack_public_path__ + \"static/media/INKY.c0748b7d.png\";","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthContext, { useAuth } from \"../context/AuthContext\";\nimport \"../styles/loginPage.css\";\nimport logo from \"../images/INKY.png\";\nimport { SERVER_URL } from \"../Utils/Constants\";\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.authCreds.auth.authenticated ? (\n          <Redirect to={\"/\"} />\n        ) : (\n          <div className=\"container\">\n            <div className=\"internal-container\">\n              <img src={logo} className=\"logo\"></img>\n              <Button\n                className=\"login-button\"\n                onClick={() =>\n                  window.open(SERVER_URL + \"/auth/google\", \"_self\")\n                }\n              >\n                Sign in With Google\n              </Button>\n              <div className=\"infoContainer\">\n                <h3>About</h3>\n                <p>\n                  Inky io is an online pictionary game to cure quarantine\n                  boredom\n                </p>\n                <p>\n                  Developed by Julian Pinto, Christina Lu, Dheeraj Kumar, Justin\n                  Flores, Richard Williams and Jen-Wei Huang\n                </p>\n                <p>Enjoy!</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AuthContext(LoginPage);\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"button-group\">\n        {this.props.showHome ? (\n          <Link to=\"/\">\n            <Button variant=\"outline-dark\">Home</Button>\n          </Link>\n        ) : (\n          \"\"\n        )}\n\n        <Link to=\"/history\">\n          <Button variant=\"outline-dark\" onClick={this.props.history}>\n            Match History\n          </Button>\n        </Link>\n        <Link to=\"/profile\">\n          <Button variant=\"outline-dark\" onClick={this.props.profile}>\n            View Profile\n          </Button>\n        </Link>\n\n        <Button variant=\"outline-danger\" onClick={this.props.authCreds.logout}>\n          Logout\n        </Button>\n        {this.props.showCreateGame ? (\n          <Button variant=\"info\" onClick={this.props.createGameClick}>\n            Create Game\n          </Button>\n        ) : (\n          \"\"\n        )}\n        {this.props.authCreds.auth.user.role ? (\n          <Link to=\"/report\">\n            <Button variant=\"outline-dark\" onClick={this.props.report}>\n             View Report\n            </Button>\n          </Link>\n        ) : (\n          \"\"\n        )}\n      </div>\n      \n    );\n  }\n}\nexport default AuthContext(NavBar);\n","import React, { Component } from \"react\";\nimport AuthContext from \"../context/AuthContext\";\nimport \"../styles/loginPage.css\";\nimport logo from \"../images/INKY.png\";\n\nclass BanPage extends Component {\n    render() {\n      return (\n        <React.Fragment>\n            <div className=\"container\">\n              <div className=\"internal-container\">\n                <img src={logo} className=\"logo\"></img>\n                <div className=\"infoContainer\">\n                  <p>\n                    This account has been suspended permanently. Please contact us for more information.\n                  </p>\n                </div>\n              </div>\n            </div>\n          )\n        </React.Fragment>\n      );\n    }\n  }\n\nexport default AuthContext(BanPage);\n","import React from \"react\";\n\nexport default function DeviceDetect() {\n  const [isMobile, setMobile] = React.useState(false);\n\n  React.useEffect(() => {\n    const userAgent =\n      typeof window.navigator === \"undefined\" ? \"\" : navigator.userAgent;\n    const mobile = Boolean(\n      userAgent.match(\n        /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i\n      )\n    );\n    setMobile(mobile);\n  }, []);\n  return { isMobile };\n}\n\nfunction withDeviceDetect(Component) {\n  return function WrappedComponent(props) {\n    const { isMobile } = DeviceDetect();\n    return <Component {...props} mobile={isMobile} />;\n  };\n}\n\nexport { withDeviceDetect };\n","import React, { createRef } from \"react\";\nimport \"../styles/HomePage.css\";\nimport {\n  Accordion,\n  Card,\n  InputGroup,\n  FormControl,\n  Overlay,\n  Button,\n  Popover,\n} from \"react-bootstrap\";\nimport NavBar from \"../components/NavBar\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport BanPage from \"./BanPage\";\nimport AuthContext from \"../context/AuthContext\";\nimport { withDeviceDetect } from \"../Utils/DeviceDetect\";\n\nimport { SERVER_URL } from \"../Utils/Constants\";\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gameCode: \"\",\n      showRoomNotFound: false,\n    };\n    this.joinButtonTarget = new createRef();\n    this.handleGameCodeChange = this.handleGameCodeChange.bind(this);\n    this.handleJoinGameClicked = this.handleJoinGameClicked.bind(this);\n    this.handleCreateGameClicked = this.handleCreateGameClicked.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleMatchHistoryClicked() {\n    // TODO: redirect to match history page\n  }\n\n  handleViewProfileClicked() {\n    // TODO: redirect to profile page\n  }\n\n  handleCreateGameClicked() {\n    const user = this.props.authCreds.auth.user;\n    fetch(\n      SERVER_URL + `/lobby/create?hostId=${user.id}&hostName=${user.name}`,\n      {\n        method: \"POST\",\n        // credentials: \"include\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          // \"Access-Control-Allow-Credentials\": true,\n        },\n      }\n    )\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"failed create new room\");\n      })\n      .then((responseJson) => {\n        // redirect to lobby\n\n        const location = {\n          pathname: `/game/${responseJson.code}`,\n        };\n        this.props.history.push(location);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  handleJoinGameClicked() {\n    const user = this.props.authCreds.auth.user;\n    if (this.state.gameCode === \"\") return;\n    fetch(SERVER_URL + `/lobby/join2`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: this.state.gameCode, userID: user.id }),\n    })\n      .then((res) => {\n        if (res.status === 200) return res.json();\n        throw new Error(\"failed fetching room info\");\n      })\n      .then((res_json) => {\n        if (res_json.success) {\n          const location = {\n            pathname: `/game/${res_json.code}`,\n          };\n          this.props.history.push(location);\n        } else {\n          this.setState({\n            showRoomNotFound: true,\n            gameCode: \"\",\n            gameErrorMessage: res_json.message,\n          });\n          // hide popover after 5 sec\n          setTimeout(() => {\n            this.setState({ showRoomNotFound: false });\n          }, 5000);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  handleGameCodeChange(e) {\n    this.setState({\n      gameCode: e.target.value,\n    });\n  }\n\n  render() {\n    const user = this.props.authCreds.auth.user;\n    if (user.ban) {\n      return <Redirect to={\"/BanPage\"} />;\n    } else {\n      return (\n        <div className=\"page\">\n          <div className=\"homepage-content\">\n            <h3>{user.name || \"kirby placeholder\"}</h3>\n            <img\n              className=\"profile-picture\"\n              src={\n                user.profileKey &&\n                (user.profileKey > 0 && user.profileKey <= 10)\n                  ? `https://pokeres.bastionbot.org/images/pokemon/${user.profileKey}.png`\n                  : \"https://play.nintendo.com/images/profile-kirby-kirby.7bf2a8f2.aead314d58b63e27.png\"\n              }\n              alt=\"pfp\"\n            ></img>\n\n            <NavBar\n              showCreateGame={!this.props.mobile}\n              createGameClick={this.handleCreateGameClicked}\n            ></NavBar>\n            <InputGroup style={{ maxWidth: \"70%\", margin: \"10px auto\" }}>\n              <FormControl\n                disabled={this.props.mobile}\n                placeholder=\"Enter lobby code to join a game\"\n                value={this.state.gameCode}\n                onChange={this.handleGameCodeChange}\n                aria-label=\"Lobby Code\"\n              />\n              <InputGroup.Append>\n                <Button\n                  ref={this.joinButtonTarget}\n                  disabled={this.props.mobile}\n                  variant=\"success\"\n                  onClick={this.handleJoinGameClicked}\n                >\n                  Join Game\n                </Button>\n              </InputGroup.Append>\n            </InputGroup>\n\n            <Overlay\n              target={this.joinButtonTarget}\n              show={this.state.showRoomNotFound}\n              placement=\"top\"\n              onClose={() => this.setState({ showRoomNotFound: false })}\n            >\n              <Popover>\n                <Popover.Content>{this.state.gameErrorMessage}</Popover.Content>\n              </Popover>\n            </Overlay>\n\n            <Accordion defaultActiveKey=\"0\" className=\"info\">\n              <Card>\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    How to Play\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body>\n                    Create a game lobby and invite your friends to play or join\n                    an existing lobby above. Adjust the settings to your liking\n                    then start the game. When it's your turn to draw, choose one\n                    of the three words and visualize it before the time runs\n                    out. The more people that get the word right, the more\n                    points you win! When somebody else is drawing, type your\n                    guess into the chat to gain points. Be quick, the earlier\n                    you guess a word the more points you get! <br />\n                    <u>Tip:</u> hints will appear above the canvas as time\n                    passes. <br />\n                    <u>Note:</u> if you a player is making you feel\n                    uncomfortable at anytime, click their card on the left to\n                    report them\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default AuthContext(withDeviceDetect(HomePage));\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport NavBar from \"../components/NavBar\";\nimport \"../styles/ProfilePage.css\";\nimport AuthContext from \"../context/AuthContext\";\nimport Dialog from \"react-bootstrap-dialog\";\nimport { SERVER_URL } from \"../Utils/Constants\";\n\nclass ProfilePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userUsername: this.props.authCreds.auth.user.name,\n      userImageDisplay: this.props.authCreds.auth.user.profileKey\n        ? this.imageWebLink(this.props.authCreds.auth.user.profileKey)\n        : \"https://play.nintendo.com/images/profile-kirby-kirby.7bf2a8f2.aead314d58b63e27.png\",\n      modalShow: false,\n      userImageDisplayIndex: this.props.authCreds.auth.user.profileKey,\n    };\n    this.usernameChange = this.usernameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleProfilePicture = this.handleProfilePicture.bind(this);\n    this.setModalShow = this.setModalShow.bind(this);\n    this.handleProfilePick = this.handleProfilePick.bind(this);\n    this.imageWebLink = this.imageWebLink.bind(this);\n  }\n  usernameChange(event) {\n    this.setState({\n      userUsername: event.target.value,\n    });\n  }\n\n  handleProfilePicture() {\n    const pokemons_number = 10;\n    const pokemonImgList = [];\n\n    for (let i = 1; i <= pokemons_number; i++) {\n      pokemonImgList.push(\n        <img\n          key={i}\n          id={i}\n          className=\"pokemonImg\"\n          src={this.imageWebLink(i)}\n          onClick={this.handleProfilePick}\n        ></img>\n      );\n    }\n    return pokemonImgList;\n  }\n  handleProfilePick(event) {\n    this.setState({\n      userImageDisplayIndex: event.target.id,\n      userImageDisplay: this.imageWebLink(event.target.id),\n      modalShow: false,\n    });\n  }\n  imageWebLink(id) {\n    if (id && id > 0 && id <= 10) {\n      return `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n    }\n    else {\n      return \"https://play.nintendo.com/images/profile-kirby-kirby.7bf2a8f2.aead314d58b63e27.png\"\n    }\n\n  }\n  handleSubmit() {\n    fetch(\n      SERVER_URL +\n        `/profile/change/name?userID=${this.props.authCreds.auth.user.id}&newName=${this.state.userUsername}&userPicture=${this.state.userImageDisplayIndex}`,\n      {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          // \"Access-Control-Allow-Credentials\": true,\n        },\n      }\n    )\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"failed create new room\");\n      })\n      .then((responseJson) => {\n        console.log(responseJson);\n        this.props.authCreds.getUserInfo();\n        this.dialog.showAlert(\"Your update was successful!\");\n        // redirect to lobby\n      })\n      .catch((error) => {\n        console.log(error);\n        this.dialog.showAlert(\"Something went wrong please try again.\");\n      });\n  }\n  setModalShow(see) {\n    this.setState({\n      modalShow: see,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"content\">\n          <NavBar\n            className=\"nav\"\n            showCreateGame={false}\n            showHome={true}\n          ></NavBar>\n          <div className=\"profilecontainer\">\n            <div className=\"profile\">\n              <div className=\"picture\">\n                <img\n                  className=\"profile-picture\"\n                  src={this.state.userImageDisplay}\n                  alt=\"pfp\"\n                ></img>\n                <Button\n                  variant=\"primary\"\n                  className=\"pickIcon\"\n                  onClick={() => this.setModalShow(true)}\n                >\n                  Change Profile Picture\n                </Button>\n              </div>\n              <div className=\"name\">\n                <p className=\"nameTitle\">Display Name: </p>\n                <input\n                  className=\"nameInput\"\n                  type=\"text\"\n                  value={this.state.userUsername}\n                  onChange={this.usernameChange}\n                ></input>\n              </div>\n\n              <Button\n                variant=\"success\"\n                className=\"savebutton\"\n                onClick={this.handleSubmit}\n              >\n                Save Changes\n              </Button>\n              <Dialog\n                ref={(component) => {\n                  this.dialog = component;\n                }}\n              />\n            </div>\n          </div>\n\n          <Modal\n            show={this.state.modalShow}\n            onHide={() => this.setModalShow(false)}\n          >\n            <Modal.Header>Icons</Modal.Header>\n            <Modal.Body>\n              <div id=\"profilePictureContainer\" className=\"modalBody\">\n                {this.handleProfilePicture()}\n              </div>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button onClick={() => this.setModalShow(false)}>Close</Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\nexport default AuthContext(ProfilePage);\n","import React from \"react\";\nimport \"../styles/GameLobbyPage.css\";\nimport { Form, InputGroup, Col, Button } from \"react-bootstrap\";\nimport constants from \"../Utils/Constants\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { withRouter, Link, Redirect } from \"react-router-dom\";\n\n//takes in prop isHost: bool\nclass GameLobbyPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numRounds: this.props.settings.rounds,\n      drawingTime: this.props.settings.draw_time,\n      customWords: \"\", //TODO: Need handle this in the backend\n      roomLink: this.props.match.params.lobbyID,\n      numRoundsOptions: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n      drawingTimeOptions: [\n        30,\n        45,\n        60,\n        75,\n        90,\n        100,\n        115,\n        130,\n        145,\n        160,\n        175,\n        190,\n        200,\n        215,\n        230,\n      ],\n      roomLinkValue: \"hover to see lobby link\",\n      modalShow: false,\n    };\n    this.handleNumRoundsChange = this.handleNumRoundsChange.bind(this);\n    this.handleDrawingTimeChange = this.handleDrawingTimeChange.bind(this);\n    this.handleCustomWordChange = this.handleCustomWordChange.bind(this);\n    this.handleCopyClicked = this.handleCopyClicked.bind(this);\n    this.startGame = this.startGame.bind(this);\n    this.kickPlayerClicked = this.kickPlayerClicked.bind(this);\n    this.kick = this.kick.bind(this);\n  }\n\n  componentDidMount() {\n    // Listen to changes in game settings\n    this.props.socket.on(\"setting-change\", (setting) => {\n      this.setState({\n        numRounds: setting.rounds,\n        drawingTime: setting.draw_time,\n      });\n    });\n    this.props.socket.on(\"kick\", (playerId) => {\n      this.kick();\n    });\n  }\n  kick() {\n    this.setState({\n      modalShow: true,\n    });\n  }\n\n  componentWillUnmount() {\n    // unsubscribe to setting change subscription\n    this.props.socket.off(\"setting-change\");\n  }\n\n  handleNumRoundsChange(e) {\n    const { match } = this.props;\n    this.props.socket.emit(\"setting-change\", match.params.lobbyID, {\n      rounds: e.target.value,\n      draw_time: this.state.drawingTime,\n    });\n\n    this.setState({\n      numRounds: e.target.value,\n    });\n  }\n\n  handleDrawingTimeChange(e) {\n    const { match } = this.props;\n    this.props.socket.emit(\"setting-change\", match.params.lobbyID, {\n      rounds: this.state.numRounds,\n      draw_time: e.target.value,\n    });\n\n    this.setState({\n      drawingTime: e.target.value,\n    });\n  }\n\n  handleCustomWordChange(e) {\n    this.setState({\n      customWords: e.target.value,\n    });\n  }\n\n  handleCopyClicked() {\n    // not supported on all broswers\n    navigator.clipboard.writeText(this.state.roomLink);\n  }\n\n  startGame() {\n    const { match } = this.props;\n    if (this.state.customWords.length) {\n      const customWords = this.state.customWords.split(\",\");\n      this.props.socket.emit(\"add-words\", match.params.lobbyID, customWords);\n    }\n    this.props.socket.emit(\n      \"lobby-state-change\",\n      match.params.lobbyID,\n      constants.IN_GAME\n    );\n  }\n\n  renderSelectOptions(options) {\n    return options.map((value, index) => {\n      return <option key={index}>{value}</option>;\n    });\n  }\n\n  countPlayers() {\n    let count = 0;\n    this.props.players.forEach((player) => {\n      if (!player.disconnected) count++;\n    });\n    return count;\n  }\n  kickPlayerClicked(event) {\n    const playerID = event.target.parentNode.id;\n    const lobby_id = this.props.match.params.lobbyID;\n    this.props.socket.emit(\"kickPlayer\", lobby_id, playerID);\n  }\n\n  render() {\n    // let roomLinkValue = 'hover to see lobby link';\n    return (\n      <div className=\"game-lobby-page\">\n        <div className=\"game-lobby-content\">\n          <div className=\"settings\">\n            <h3 style={{ textAlign: \"center\", paddingBottom: \"1em\" }}>\n              Settings\n            </h3>\n            <Form className=\"settings-form\">\n              <Form.Group as={Form.Row}>\n                <Form.Label column sm={5}>\n                  Number of Rounds\n                </Form.Label>\n                <Col sm={7}>\n                  <Form.Control\n                    as=\"select\"\n                    disabled={!this.props.isHost}\n                    value={this.state.numRounds}\n                    onChange={this.handleNumRoundsChange}\n                  >\n                    {this.renderSelectOptions(this.state.numRoundsOptions)}\n                  </Form.Control>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Form.Row}>\n                <Form.Label column sm={5}>\n                  Drawing Time\n                </Form.Label>\n                <Col sm={7}>\n                  <InputGroup>\n                    <Form.Control\n                      as=\"select\"\n                      disabled={!this.props.isHost}\n                      value={this.state.drawingTime}\n                      onChange={this.handleDrawingTimeChange}\n                    >\n                      {this.renderSelectOptions(this.state.drawingTimeOptions)}\n                    </Form.Control>\n                    <InputGroup.Append>\n                      <InputGroup.Text>seconds</InputGroup.Text>\n                    </InputGroup.Append>\n                  </InputGroup>\n                </Col>\n              </Form.Group>\n              <Form.Group as={Form.Row}>\n                <Form.Label column sm={5}>\n                  Customs Words\n                </Form.Label>\n                {/* TODO: file handling - remove file, add words from file to text area separated with commas */}\n                <Form.File style={{ padding: \"15px 0px\" }}>\n                  <Form.File.Input />\n                </Form.File>\n                <Form.Control\n                  as=\"textarea\"\n                  disabled={!this.props.isHost}\n                  readOnly={!this.props.isHost}\n                  placeholder=\"Leave blank to only use default words. Separate words with commas.\"\n                  value={this.state.customWords}\n                  onChange={this.handleCustomWordChange}\n                />\n              </Form.Group>\n              <InputGroup\n                onMouseOver={() => {\n                  this.setState({ roomLinkValue: this.state.roomLink });\n                }}\n                onMouseOut={() => {\n                  this.setState({ roomLinkValue: \"hover to see lobby link\" });\n                }}\n              >\n                <Form.Control\n                  disabled\n                  readOnly\n                  value={this.state.roomLinkValue}\n                  ref={(el) => {\n                    this.roomLinkText = el;\n                  }}\n                />\n                <InputGroup.Append>\n                  <Button dvariant=\"info\" onClick={this.handleCopyClicked}>\n                    Copy\n                  </Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form>\n            <div className=\"button-group\">\n              <Link to=\"/\" className=\"leave-lobby-btn\">\n                <Button variant=\"outline-secondary\">Leave Lobby</Button>\n              </Link>\n              <Button\n                className=\"start-game-btn\"\n                variant=\"success\"\n                // disabled={this.countPlayers() < 2}\n                disabled={!this.props.isHost}\n                onClick={this.startGame}\n              >\n                Start Game\n              </Button>\n            </div>\n          </div>\n          <div className=\"players\">\n            <h3 style={{ textAlign: \"center\", paddingBottom: \"1em\" }}>\n              Players\n            </h3>\n            <div className=\"player-grid\">\n              {this.props.players.map((player, index) => {\n                if (\n                  player.state === constants.DISCONNECTED ||\n                  player.state === constants.KICKED\n                ) {\n                  return \"\";\n                }\n                return (\n                  <div key={index} className=\"player-container\" id={player.id}>\n                    {this.props.isHost ? (\n                      player.id !== this.props.hostId ? (\n                        <Button\n                          variant=\"danger\"\n                          onClick={this.kickPlayerClicked}\n                          className=\"kickButton\"\n                        >\n                          X\n                        </Button>\n                      ) : (\n                        \"\"\n                      )\n                    ) : (\n                      \"\"\n                    )}\n\n                    <img\n                      className=\"player-pfp\"\n                      src={\n                        player.profileKey &&\n                        (player.profileKey > 0 && player.profileKey <= 10)\n                          ? `https://pokeres.bastionbot.org/images/pokemon/${player.profileKey}.png`\n                          : \"https://play.nintendo.com/images/profile-kirby-kirby.7bf2a8f2.aead314d58b63e27.png\"\n                      }\n                      alt=\"pfp\"\n                    ></img>\n                    <div>{player.name}</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <Modal show={this.state.modalShow}>\n            <Modal.Header>Kicked</Modal.Header>\n            <Modal.Body>You have been kicked from this room.</Modal.Body>\n\n            <Modal.Footer>\n              <Button onClick={() => this.props.history.push(\"/\")}>\n                Close\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(GameLobbyPage);\n","const weights = [\n  {\n    name: \"2.5\",\n    value: 2.5,\n  },\n\n  {\n    name: \"5\",\n    value: 5,\n  },\n\n  {\n    name: \"10\",\n    value: 10,\n  },\n];\n\nexport default weights;\n","const colors = [\n  {\n    name: \"black\",\n    value: \"#000000\",\n  },\n  {\n    name: \"red\",\n    value: \"#FF0000\",\n  },\n  {\n    name: \"orange\",\n    value: \"#FF8C00\"\n  },\n  {\n    name: \"coral\",\n    value: \"#F08080\"\n  },\n  {\n    name: \"pink\",\n    value: \"#FF98DC\",\n  },\n  {\n    name: \"fuschsia\",\n    value: \"#FF00FF\"\n  },\n  {\n    name: \"purple\",\n    value: \"#8F00F0\"\n  },\n  {\n    name: \"turquoise\",\n    value: \"#40E0D0\",\n  },\n  {\n    name: \"blue\",\n    value: \"#0000FF\",\n  },\n  {\n    name: \"green\",\n    value: \"#008000\",\n  },\n  {\n    name: \"lime\",\n    value: \"#00FF75\",\n  },\n  {\n    name: \"yellow\",\n    value: \"#FFFF00\",\n  },\n  {\n    name: \"gold\",\n    value: \"#FFD700\",\n  },\n  {\n    name: \"brown\",\n    value: \"#A52A2A\",\n  },\n];\n\nexport default colors;\n","import React from \"react\";\n\nexport default function ColorBox(props) {\n  function onClick(e) {\n    e.preventDefault();\n    props.changeColor(props.colorVal);\n  }\n  return (\n    <div\n      className=\"color-option\"\n      onClick={onClick}\n      style={{ backgroundColor: props.colorVal }}\n    >\n      <div className=\"col-content\">\n        <span>{\"\"}</span>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport p5 from \"p5\";\n\nimport weights from \"./weights\";\nimport colors from \"./colors\";\nimport ColorBox from \"./ColorBox\";\nimport { Button } from \"react-bootstrap\";\nimport { FaEraser, FaRegTrashAlt } from \"react-icons/fa\";\n\nimport { withRouter } from \"react-router-dom\";\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myRef = React.createRef();\n    this.strokes = this.props.strokes;\n    this.start = true;\n    this.color = \"#000000\";\n    this.weight = 1;\n\n    // this.state = {\n    //   weight: 1,\n    // };\n  }\n\n  componentDidMount() {\n    console.log(`Mounting canvas ${this.start}`);\n    this.myP5 = new p5(this.Sketch, this.myRef.current);\n    this.props.socket.on(\"draw\", this.sketch.onNewDrawing);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Unmounting canvas\");\n  }\n\n  Sketch = (sketch) => {\n    sketch.setup = () => {\n      sketch.createCanvas(\n        this.myRef.current.offsetWidth,\n        this.myRef.current.offsetHeight\n      );\n      // sketch.frameRate(20);\n    };\n\n    sketch.draw = () => {\n      if (this.start) {\n        sketch.background(\"#ffffff\");\n\n        const w = sketch.width;\n        const h = sketch.height;\n\n        this.props.strokes.forEach((stroke) => {\n          sketch.strokeWeight(stroke.weight);\n          sketch.stroke(stroke.color);\n          sketch.line(\n            stroke.x1 * w,\n            stroke.y1 * h,\n            stroke.x2 * w,\n            stroke.y2 * h\n          );\n        });\n        this.start = false;\n      }\n    };\n\n    sketch.reset = () => {\n      console.log(\"Clearing canvas..\");\n\n      sketch.clear();\n      sketch.background(\"#ffffff\");\n      sketch.strokeCap(p5.ROUND);\n\n      const w = sketch.width;\n      const h = sketch.height;\n\n      this.strokes.forEach((stroke) => {\n        sketch.strokeWeight(stroke.weight);\n        sketch.stroke(stroke.color);\n        sketch.line(stroke.x1 * w, stroke.y1 * h, stroke.x2 * w, stroke.y2 * h);\n      });\n    };\n\n    sketch.mouseDragged = () => {\n      const w = sketch.width;\n      const h = sketch.height;\n\n      if (this.props.drawing && this.props.round_state !== 0) {\n        const msg = {\n          type: 0,\n          x1: sketch.pmouseX / w,\n          y1: sketch.pmouseY / h,\n          x2: sketch.mouseX / w,\n          y2: sketch.mouseY / h,\n          color: this.color,\n          weight: this.weight,\n        };\n\n        this.strokes.push(msg);\n\n        const { match } = this.props;\n        this.props.socket.emit(\"draw\", match.params.lobbyID, msg);\n\n        sketch.strokeWeight(this.weight);\n        sketch.stroke(this.color);\n        sketch.line(\n          sketch.pmouseX,\n          sketch.pmouseY,\n          sketch.mouseX,\n          sketch.mouseY\n        );\n      }\n    };\n\n    sketch.onNewDrawing = (stroke, strokes) => {\n      if (stroke.type === 1) {\n        sketch.clear();\n        sketch.background(\"#ffffff\");\n      } else {\n        const w = sketch.width;\n        const h = sketch.height;\n\n        sketch.strokeWeight(stroke.weight);\n        sketch.stroke(stroke.color);\n        sketch.line(stroke.x1 * w, stroke.y1 * h, stroke.x2 * w, stroke.y2 * h);\n      }\n      this.strokes = strokes;\n    };\n\n    sketch.windowResized = () => {\n      if (this.myRef.current)\n        sketch.resizeCanvas(\n          this.myRef.current.offsetWidth,\n          this.myRef.current.offsetHeight\n        );\n      sketch.reset();\n    };\n\n    this.sketch = sketch;\n  };\n\n  renderColorOptions() {\n    const options = [];\n    colors.forEach((col, i) => {\n      options.push(\n        <ColorBox\n          key={i}\n          colorVal={col.value}\n          changeColor={this.colorOptionOnClick}\n        />\n      );\n    });\n\n    return options;\n  }\n\n  renderStrokeOptions() {\n    const options = [];\n    weights.forEach((weight, i) => {\n      options.push(\n        <Button\n          variant=\"dark\"\n          style={{\n            padding: weight.value + \"px\",\n            maxWidth: \"70px\",\n            width: \"100%\",\n            borderRadius: \"50px\",\n          }}\n          key={i}\n          value={weight.value}\n          onClick={this.strokeOptionClick}\n        ></Button>\n      );\n    });\n\n    return options;\n  }\n\n  colorOptionOnClick = (color) => {\n    console.log(`Changing pen color to ${color}`);\n    // this.setState({ color: color });\n    this.color = color;\n  };\n\n  strokeOptionClick = (event) => {\n    event.preventDefault();\n    console.log(`Changing stroke weight to ${event.target.value}`);\n    // this.setState({ weight: parseInt(event.target.value) });\n    this.weight = parseInt(event.target.value);\n  };\n\n  eraser = () => {\n    // this.setState({ color: \"#FFFFFF\" });\n    this.color = \"#FFFFF\";\n  };\n\n  clearCanvas = () => {\n    const { match } = this.props;\n    const msg = { type: 1 };\n    this.props.socket.emit(\"draw\", match.params.lobbyID, msg);\n\n    this.sketch.clear();\n    this.sketch.background(\"#ffffff\");\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div id=\"canvas\" ref={this.myRef}></div>\n        {this.props.drawing ? (\n          <div className=\"canvas-tool-container\">\n            <div className=\"color-options-container\">\n              {this.renderColorOptions()}\n            </div>\n            <div className=\"tools\">\n              <React.Fragment>{this.renderStrokeOptions()}</React.Fragment>\n              <Button variant=\"outline-info\" onClick={this.eraser}>\n                <FaEraser />\n              </Button>\n              <Button variant=\"outline-info\" onClick={this.clearCanvas}>\n                <FaRegTrashAlt />\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <></>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(Canvas);\n","import React from \"react\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./WordsModal.css\";\n\n// takes in prop isArtist, artistName, words\nclass WordsModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(word) {\n    const { match } = this.props;\n    this.props.socket.emit(\"turn-start\", match.params.lobbyID, word);\n  }\n\n  render() {\n    return (\n      <div\n        className=\"words-modal\"\n        style={{\n          display: this.props.show ? \"block\" : \"none\",\n        }}\n      >\n        <Card>\n          <Card.Header>\n            <Card.Title>\n              {this.props.isArtist\n                ? \"Pick a Word\"\n                : this.props.artistName + \" is picking a word\"}\n            </Card.Title>\n          </Card.Header>\n          <Card.Footer>\n            {this.props.isArtist ? (\n              <>\n                <Button\n                  className=\"word-btn\"\n                  variant=\"outline-dark\"\n                  onClick={() => this.handleClick(this.props.words[0])}\n                >\n                  {this.props.words[0]}\n                </Button>\n                <Button\n                  className=\"word-btn\"\n                  variant=\"outline-dark\"\n                  onClick={() => this.handleClick(this.props.words[1])}\n                >\n                  {this.props.words[1]}\n                </Button>\n                <Button\n                  className=\"word-btn\"\n                  variant=\"outline-dark\"\n                  onClick={() => this.handleClick(this.props.words[2])}\n                >\n                  {this.props.words[2]}\n                </Button>\n              </>\n            ) : (\n              <p>The round will start when a word is chosen!</p>\n            )}\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(WordsModal);\n","import React from \"react\";\nimport Canvas from \"./Canvas\";\nimport WordsModal from \"./WordsModal\";\nimport \"./Canvas.css\";\n\nexport default function CanvasContainer(props) {\n  return (\n    <div className=\"canvas-container\">\n      <Canvas\n        socket={props.socket}\n        strokes={props.strokes}\n        drawing={props.drawing}\n        round_state={props.round_state}\n      />\n      <div\n        className=\"custom-modal\"\n        onClick={(e) => {\n          e.preventDefault();\n        }}\n      >\n        <WordsModal\n          socket={props.socket}\n          show={props.round_state === 0}\n          isArtist={props.drawing}\n          artistName={props.drawer}\n          round_state={props.round_state}\n          words={props.word_list}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nexport default class ChatMessage extends Component {\n  render() {\n    return (\n        <p className=\"message\">\n          <span className=\"message-name\"><b>{this.props.message.name}</b>:  </span>\n          <span className=\"message-content\">{this.props.message.content}</span>\n        </p>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { Card, Form } from \"react-bootstrap\";\n\nimport ChatMessage from \"./ChatMessage\";\nclass ChatBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMessage: \"\",\n      messageLog: [],\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    // this.fetchChats = this.fetchChats.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ currentMessage: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { match } = this.props;\n    this.props.socket.emit(\n      \"chat\",\n      match.params.lobbyID,\n      this.state.currentMessage\n    );\n    this.setState({ currentMessage: \"\" });\n  }\n\n  async fetchChats() {\n    let response = await fetch(`http://localhost:8888/lobby/chatHistory?lobbycode=${this.props.lobby}`)\n    if (response.ok) {\n      return response.json()\n    } else {\n      return Promise.reject(response)\n    }\n  }\n\n  \n  componentDidMount() {  \n    this.fetchChats()\n      .then(response => this.setState({messageLog : response.chatLog}))\n      .catch(error => console.error(error))\n      console.log(this.state.messageLog)\n\n\n    this.props.socket.on(\"chat\", (name, msg) => {\n      console.log(`received \"${name}: ${msg}\"`);\n      this.setState({\n        messageLog: [...this.state.messageLog, { name: name, content: msg }],\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Card style={{ height: \"100%\" }}>\n        <Card.Body>\n          {this.state.messageLog.map((msg, i) => (\n            <ChatMessage key={i} message={msg} />\n          ))}\n        </Card.Body>\n        <Card.Footer>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Control\n              type=\"input\"\n              onChange={this.handleChange}\n              value={this.state.currentMessage}\n              placeholder=\"type your guess here\"\n            ></Form.Control>\n          </Form>\n        </Card.Footer>\n      </Card>\n    );\n  }\n}\n\nexport default withRouter(ChatBox);\n","import React from \"react\";\nimport \"./PlayerSidebar.css\";\nimport { Card, Button, Overlay, Popover, Modal, Form } from \"react-bootstrap\";\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\nimport constants from \"../../Utils/Constants\";\n\nexport default class PlayerContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showReportModal: false,\n      showReportPopover: false,\n      cheating: false,\n      verbalAbuse: false,\n      inappropriateName: false,\n    };\n    this.cardRef = React.createRef();\n    this.reportPlayer = this.reportPlayer.bind(this);\n    this.initiateReportPlayer = this.initiateReportPlayer.bind(this);\n    this.renderReportModal = this.renderReportModal.bind(this);\n    this.renderReportOverlay = this.renderReportOverlay.bind(this);\n  }\n\n  getVariant(playerState) {\n    switch (playerState) {\n      case constants.CONNECTED:\n        return \"primary\";\n      case constants.KICKED:\n        return \"danger\";\n      case constants.DISCONNECTED:\n        return \"secondary\";\n      default:\n        return \"warning\";\n    }\n  }\n\n  initiateReportPlayer() {\n    console.log(\"reporting\", this.props.player);\n    this.setState({\n      showReportPopover: false,\n      showReportModal: true,\n    });\n  }\n\n  reportPlayer() {\n    console.log(\"reported \" + this.props.player, this.state);\n\n    if(this.state.cheating || this.state.verbalAbuse || this.state.inappropriateName){\n      this.props.socket.emit(\"report\", this.props.lobby, this.props.player.id, this.props.player.name, \n      {cheating: this.state.cheating,\n       verbalAbuse: this.state.verbalAbuse,\n       inappropriateName: this.state.inappropriateName,}\n      )\n    }\n\n\n    this.setState({\n      cheating: false,\n      verbalAbuse: false,\n      inappropriateName: false,\n      showReportModal: false,\n    });\n  }\n\n  renderReportModal() {\n    return (\n      <Modal\n        show={this.state.showReportModal}\n        onHide={() => this.setState({ showReportModal: false })}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Why are you reporting {this.props.player.name}?\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Check all that apply</p>\n          <Form.Check\n            label=\"Cheating\"\n            type=\"checkbox\"\n            value={this.state.cheating}\n            onChange={() => this.setState({ cheating: !this.state.cheating })}\n          />\n          <Form.Check\n            label=\"Verbal Abuse\"\n            type=\"checkbox\"\n            value={this.state.verbalAbuse}\n            onChange={() =>\n              this.setState({ verbalAbuse: !this.state.verbalAbuse })\n            }\n          />\n          <Form.Check\n            label=\"Inappropriate Name\"\n            type=\"checkbox\"\n            value={this.state.inappropriateName}\n            onChange={() =>\n              this.setState({\n                inappropriateName: !this.state.inappropriateName,\n              })\n            }\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"warning\"\n            onClick={() => this.setState({ showReportModal: false })}\n          >\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={() => this.reportPlayer()}>\n            Report\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  renderReportOverlay() {\n    return this.props.player.state === constants.CONNECTED ? (\n      <Overlay\n        target={this.cardRef}\n        show={this.state.showReportPopover}\n        placement=\"right\"\n      >\n        <Popover>\n          <div className=\"report-popover\">\n            <span>Report? </span>\n            <Button\n              variant=\"outline-danger\"\n              onClick={() => this.setState({ showReportPopover: false })}\n            >\n              <FaTimes />\n            </Button>\n            <Button\n              variant=\"outline-success\"\n              onClick={() => this.initiateReportPlayer()}\n            >\n              <FaCheck />\n            </Button>\n          </div>\n        </Popover>\n      </Overlay>\n    ) : (\n      <></>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"player\">\n        <a\n          style={{ cursor: \"pointer\" }}\n          ref={this.cardRef}\n          onClick={() => this.setState({ showReportPopover: true })}\n        >\n          <Card\n            id=\"player-card\"\n            border=\"dark\"\n            bg={this.getVariant(this.props.player.state)}\n          >\n            <Card.Header>{this.props.player.name}</Card.Header>\n            <Card.Body>\n              <Card.Text>\n                <b># {this.props.index + 1}&emsp;</b>\n                {this.props.player.score}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </a>\n        {this.state.showReportPopover ? this.renderReportOverlay() : <></>}\n        {this.state.showReportModal ? this.renderReportModal() : <></>}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./PlayerSidebar.css\";\nimport PlayerContainer from \"./PlayerContainer\";\n\nexport default class PlayerSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  render() {\n    return (\n      <div className=\"player-sidebar\">\n        {this.props.players\n          .sort(function (a, b) {\n            return b.score - a.score;\n          })\n          .map((player, index) => {\n            return (\n              <PlayerContainer\n                key={index}\n                player={player}\n                index={index}\n                lobby={this.props.lobby}\n                socket={this.props.socket}\n              ></PlayerContainer>\n            );\n          })}\n      </div>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\n\nexport default function Timer(props) {\n  const [time, setTime] = useState(props.timer);\n\n  useEffect(() => {\n    props.socket.on(\"time-update\", (new_time) => {\n      setTime(new_time);\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      <img\n        className=\"timer\"\n        src=\"https://i.pinimg.com/originals/2a/0c/fe/2a0cfecd615bed18b3cf4688d2b5962c.png\"\n        alt=\"pfp\"\n      ></img>\n      <div>{time}</div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport CanvasContainer from \"../components/GameComponents/CanvasContainer\";\nimport ChatBox from \"../components/GameComponents/ChatBox\";\nimport PlayerSidebar from \"../components/GameComponents/PlayerSidebar\";\n\nimport { withRouter, Link } from \"react-router-dom\";\nimport { withAuth } from \"../context/auth-context\";\n\nimport \"../styles/GamePage.css\";\nimport { Button } from \"react-bootstrap\";\nimport Timer from \"../components/GameComponents/Timer\";\n\nclass GamePage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      strokes: [],\n      hint: [],\n    };\n\n    // this.getTime = this.getTime.bind(this);\n    // this.interval = null;\n    // this.syncInterval = null;\n  }\n\n  componentDidMount() {\n    this.props.socket.on(\"game-status\", (status) => {\n      this.setState({ ...status });\n    });\n\n    this.getRoundStatus();\n\n    this.props.socket.on(\"new-round-status\", () => this.getRoundStatus());\n\n    // this.props.socket.on(\"new-round-status\", () => {\n    //   if (this.interval === null) {\n    //     console.log(\"new round statssssssssss\");\n    //     this.interval = setInterval(() => {\n    //       if (this.state.timer > 0) {\n    //         this.setState({\n    //           timer: this.state.timer - 1,\n    //         });\n    //       } else {\n    //         clearInterval(this.interval);\n    //         clearInterval(this.syncInterval);\n    //         this.interval = null;\n    //         this.syncInterval = null;\n    //       }\n    //     }, 1000);\n    //     this.syncInterval = setInterval(() => {\n    //       this.getTime();\n    //     }, 5000);\n    //     this.getRoundStatus();\n    //   }\n    // });\n\n    // this.props.socket.on(\"timesync\", (data) => {\n    //   console.log(\"Server time now\", data, \"off set:\", this.state.timer - data);\n    //   this.setState({\n    //     timer: data,\n    //   });\n    // });\n  }\n\n  getTime() {\n    this.props.socket.emit(\"timesync\", this.props.match.params.lobbyID);\n  }\n\n  getRoundStatus() {\n    const lobbyID = this.props.match.params.lobbyID;\n    const user = this.props.authCreds.auth.user;\n    this.props.socket.emit(\"game-status\", lobbyID, user.id);\n  }\n\n  render() {\n    const user = this.props.authCreds.auth.user;\n    return (\n      <div className=\"game-page\">\n        <Link to=\"/\" className=\"leave-lobby-btn\">\n          <Button variant=\"outline-secondary\">Leave Lobby</Button>\n        </Link>\n        <div className=\"game-header\">\n          <div className=\"empty-placeholder\" style={{width:\"15%\"}}></div>\n          <div className=\"canvas-header\">\n            <h3 style={{width:\"max-content\", margin:\"auto\"}}>{this.state.hint}</h3>\n            <div className=\"timer\">\n              <Timer socket={this.props.socket} timer={this.state.timer} />\n            </div>\n          </div>\n          <div className=\"empty-placeholder\" style={{width:\"25%\"}}></div>\n        </div>\n        <div className=\"game-contents\">\n          <div className=\"players-container\">\n            <PlayerSidebar\n              className=\"players-container\"\n              players={this.props.players}\n              lobby={this.props.match.params.lobbyID}\n              socket={this.props.socket}\n            ></PlayerSidebar>\n          </div>\n          <CanvasContainer\n            socket={this.props.socket}\n            drawer={this.state.drawer ? this.state.drawer.name : \"\"}\n            round_state={this.state.round_state}\n            word_list={this.state.word_list}\n            drawing={\n              this.state.drawer ? this.state.drawer.id === user.id : false\n            }\n            strokes={this.state.strokes}\n          />\n          <div className=\"chat-container\">\n            <ChatBox \n              socket={this.props.socket}\n              lobby={this.props.match.params.lobbyID}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(withRouter(GamePage));\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport \"../styles/EndOfGamePage.css\";\n//import AuthContext from \"../context/AuthContext\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport constants from \"../Utils/Constants\";\n\nclass GameEndingPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersInLobby: this.sortWinner(this.props.players),\n    };\n    this.sortWinner = this.sortWinner.bind(this);\n    this.playAgainClicked = this.playAgainClicked.bind(this);\n    this.leaveClicked = this.leaveClicked.bind(this);\n  }\n\n  sortWinner(arr) {\n    let len = arr.length;\n    for (let i = len - 1; i >= 0; i--) {\n      for (let j = 1; j <= i; j++) {\n        if (arr[j - 1].score > arr[j].score) {\n          var temp = arr[j - 1];\n          arr[j - 1] = arr[j];\n          arr[j] = temp;\n        }\n      }\n    }\n    arr.reverse();\n    let displayarray = [];\n    for (let i = 0; i < arr.length; i++) {\n      displayarray.push(\n        <Card key={i} id={i} className=\"player\" style={{ width: \"6rem\" }}>\n          <Card.Img\n            variant=\"top\"\n            src={\n              arr[i].profileKey\n                ? `https://pokeres.bastionbot.org/images/pokemon/${arr[i].profileKey}.png`\n                : \"https://play.nintendo.com/images/profile-kirby-kirby.7bf2a8f2.aead314d58b63e27.png\"\n            }\n          />\n          <Card.Body className=\"playerGameInfo\" style={{ padding: \"0px\" }}>\n            <Card.Title className=\"playerName\">{arr[i].name}</Card.Title>\n            <Card.Text className=\"playerScore\">\n              Points: {arr[i].score}\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    }\n    return displayarray;\n  }\n  playAgainClicked() {\n    const lobby_id = this.props.match.params.lobbyID;\n    this.props.socket.emit(\"lobby-state-change\", lobby_id, constants.IN_LOBBY);\n  }\n\n  leaveClicked() {\n    if (this.props.isHost) {\n      const lobby_id = this.props.match.params.lobbyID;\n      this.props.socket.emit(\"dc-game\", lobby_id);\n    }\n\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <div className=\"content\">\n          <div className=\"podium\">\n            <div className=\"playerPodium\">\n              <p>{this.state.usersInLobby[1]}</p>\n              <div className=\"podium2\"></div>\n            </div>\n            <div className=\"playerPodium\">\n              <p>{this.state.usersInLobby[0]}</p>\n              <div className=\"podium1\"></div>\n            </div>\n            <div className=\"playerPodium\">\n              <p>{this.state.usersInLobby[2]}</p>\n              <div className=\"podium3\"></div>\n            </div>\n          </div>\n          <div className=\"restPlayers\">\n            {[...this.state.usersInLobby.slice(3)]}\n          </div>\n          <div className=\"buttonSet\">\n            {this.props.isHost ? (\n              <Button\n                className=\"playAgain\"\n                variant=\"secondary\"\n                onClick={this.playAgainClicked}\n              >\n                Play Again\n              </Button>\n            ) : (\n              \"\"\n            )}\n\n            <Button\n              className=\"leave\"\n              variant=\"success\"\n              onClick={this.leaveClicked}\n            >\n              Leave\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default withRouter(GameEndingPage);\n","import React, { Component } from \"react\";\nimport GameLobbyPage from \"./GameLobbyPage\";\nimport GamePage from \"./GamePage\";\nimport GameEndingPage from \"./GameEndingPage\";\n\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport AuthContext from \"../context/AuthContext\";\nimport DeviceDetect from \"../Utils/DeviceDetect\";\nimport io from \"socket.io-client\";\nimport constants, { SERVER_URL } from \"../Utils/Constants\";\n\nfunction mobileChecker(Component) {\n  const { isMobile } = DeviceDetect();\n\n  if (isMobile) {\n    return <Redirect to={\"/\"} />;\n  } else {\n    console.log(\"On phone\");\n    return function GameRoute(props) {\n      return <Component {...props} />;\n    };\n  }\n}\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      host: false,\n      socket: io.connect(SERVER_URL), // Set up reconnections\n    };\n\n    this.onJoin = this.onJoin.bind(this);\n  }\n\n  componentDidMount() {\n    this.state.socket.once(\"connect\", (data) => {\n      console.log(\"Connected to the server socket...\");\n    });\n\n    const lobby_id = this.props.match.params.lobbyID;\n    const user = this.props.authCreds.auth.user;\n\n    // Listen to socket response to join request\n    this.state.socket.on(\"join\", this.onJoin);\n\n    // Listen to player list updates\n    this.state.socket.on(\"player-list-update\", (lobby) => {\n      this.setState({\n        host: lobby.host.id === user.id,\n        host_info: lobby.host,\n        players: lobby.players,\n      });\n    });\n\n    // listen for score updates\n    this.state.socket.on(\"score\", (res) => {\n      this.setState((prevState) => ({\n        players: prevState.players.map((obj) =>\n          obj.id === res.user_id\n            ? Object.assign(obj, { score: res.score })\n            : obj\n        ),\n      }));\n    });\n\n    // Join socket room\n    this.state.socket.emit(\"join\", {\n      lobby_id: lobby_id,\n      player: {\n        id: user.id,\n        name: user.name,\n        profileKey: user.profileKey,\n      },\n    });\n\n    this.state.socket.on(\"state-change\", (new_state) => {\n      console.log(`Changing state to ${new_state}`);\n      this.setState({\n        state: new_state,\n      });\n      console.log(`Changing game state to ${this.state.state}`)\n    });\n\n    this.state.socket.on(\"disconnect\", (reason) => {\n      console.log(\"Disconnected  from server...\");\n\n      if (\n        reason === \"ping timeout\" ||\n        reason === \"transport close\" ||\n        reason === \"transport error\"\n      ) {\n        console.log(`Disconnection reason: ${reason}`);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.state.socket.disconnect();\n  }\n\n  onJoin(res) {\n    const user = this.props.authCreds.auth.user;\n    if (res.success) {\n      this.setState({\n        host: res.lobby.host.id === user.id,\n        host_info: res.lobby.host,\n        settings: res.lobby.settings,\n        players: res.lobby.players,\n        state: res.lobby.state,\n      });\n    } else {\n      this.props.history.push(\"/\");\n    }\n  }\n\n  pageManager() {\n    // TODO: add spinner for connecting loading\n    if (this.state.state === constants.IN_LOBBY)\n      return (\n        <GameLobbyPage\n          socket={this.state.socket}\n          isHost={this.state.host}\n          players={this.state.players}\n          settings={this.state.settings}\n          hostId={this.state.host_info.id}\n        />\n      );\n\n    if (this.state.state === constants.IN_GAME)\n      return (\n        <GamePage players={this.state.players} socket={this.state.socket} />\n      );\n    if (this.state.state === constants.GAME_ENDED)\n      return (\n        <GameEndingPage\n          players={this.state.players}\n          socket={this.state.socket}\n          isHost={this.state.host}\n        />\n      );\n\n    if (this.state.state === constants.GAME_DISCONNECTED)\n      return <Redirect to={\"/\"} />;\n  }\n\n  render() {\n    return <React.Fragment>{this.pageManager()}</React.Fragment>;\n  }\n}\n\nexport default AuthContext(withRouter(Game));\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../styles/AdminPage.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Link } from \"react-router-dom\";\n\nimport { SERVER_URL } from \"../Utils/Constants\";\n\n/*\n JSX For overlay in the middle of screen\n*/\n\nfunction MyOverlay(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          {props.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {props.islog\n          ? props.body.map((element) => <li key={element}>{element}</li>)\n          : props.body}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={() => {\n            props.onHide();\n          }}\n        >\n          Close\n        </Button>\n        {props.islog ? (\n          \"\"\n        ) : (\n          <Button\n            onClick={() => {\n              props.onHide();\n              props.actionforyes(props.document);\n            }}\n          >\n            Yes\n          </Button>\n        )}\n        {props.islog ? (\n          \"\"\n        ) : (\n          <Button\n            onClick={() => {\n              props.onHide();\n              props.actionforno(props.document);\n            }}\n          >\n            No\n          </Button>\n        )}\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\n/*\nOverlay\n*/\nfunction Overlay(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"outline-dark\"\n        onClick={() => {\n          setModalShow(true);\n          props.chatLogFunc(props.document);\n        }}\n      >\n        {props.title}\n      </Button>\n      <MyOverlay\n        show={modalShow}\n        option={props.option}\n        onHide={() => {\n          setModalShow(false);\n          props.clearMesFunc();\n        }}\n        title={props.title}\n        body={props.body}\n        islog={props.islog}\n        actionforyes={props.actionforyes}\n        actionforno={props.actionforno}\n        document={props.document}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default class AdminPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      messages: [],\n      documents: [],\n      players: [],\n      reasons: [],\n      dates: [],\n      lobbyIDs: [],\n    };\n    this.deleteReport = this.deleteReport.bind(this);\n    this.gettingReport = this.gettingReport.bind(this);\n    this.banPlayer = this.banPlayer.bind(this);\n    this.getChatLog = this.getChatLog.bind(this);\n    this.clearMessages = this.clearMessages.bind(this);\n  }\n  //TODO need to get Report data from database\n\n  componentDidMount() {\n    this.gettingReport();\n  }\n\n  //Fetch reports\n  gettingReport() {\n    fetch(SERVER_URL + \"/report/report\", {\n      method: \"GET\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"failed to get the report\");\n      })\n      .then((responseJson) => {\n        this.setState({\n          documents: responseJson.document,\n          players: responseJson.player,\n          reasons: responseJson.reason,\n          dates: responseJson.date,\n          lobbyIDs: responseJson.lobbyID,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  //Delete report\n  deleteReport(documentID) {\n    console.log(\"delete Report\");\n\n    fetch(SERVER_URL + `/report/delete?documentID=${documentID}`, {\n      method: \"POST\",\n      // credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        // \"Access-Control-Allow-Credentials\": true,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"failed create new room\");\n      })\n      .then((responseJson) => {\n        console.log(responseJson);\n        if (responseJson.success) {\n          this.setState({\n            documents: responseJson.document,\n            players: responseJson.player,\n            reasons: responseJson.reason,\n            dates: responseJson.date,\n            lobbyIDs: responseJson.lobbyID,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  //Ban Player\n  banPlayer(documentID) {\n    console.log(\"ban player\");\n\n    fetch(SERVER_URL + `/report/ban?documentID=${documentID}`, {\n      method: \"POST\",\n      // credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        // \"Access-Control-Allow-Credentials\": true,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"failed create new room\");\n      })\n      .then((responseJson) => {\n        console.log(responseJson);\n        if (responseJson.success) {\n          this.setState({\n            documents: responseJson.document,\n            players: responseJson.player,\n            reasons: responseJson.reason,\n            dates: responseJson.date,\n            lobbyIDs: responseJson.lobbyID,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  getChatLog(documentID) {\n    console.log(\"getting chat log\");\n    fetch(SERVER_URL + `/report/chatLog?documentID=${documentID}`, {\n      method: \"GET\",\n      // credentials: \"include\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        // \"Access-Control-Allow-Credentials\": true,\n      },\n    })\n      .then((response) => {\n        if (response.status === 200) return response.json();\n        throw new Error(\"failed create new room\");\n      })\n      .then((responseJson) => {\n        if (responseJson.success) {\n          this.setState({\n            messages: responseJson.message,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  clearMessages() {\n    this.setState({\n      messages: [],\n    });\n  }\n  render() {\n    var card = [];\n    var i;\n    for (i = 0; i < this.state.documents.length; i++) {\n      const date = new Date(this.state.dates[i]);\n      card.push(\n        <Card key={i}>\n          <div>\n            <div className=\"myContainer\">\n              <div className=\"PlayerName\">\n                {\" \"}\n                {\"Player: \"}\n                {this.state.players[i]}\n              </div>\n              <div className=\"Date\">\n                {\" \"}\n                {\"Date: \"}\n                {date.getFullYear()}/{date.getMonth() + 1}/{date.getDate()}\n              </div>\n              <div className=\"Reason\">\n                {\" \"}\n                {\"Reason: \"}\n                {this.state.reasons[i]}\n              </div>\n            </div>\n            <div className=\"button-group\">\n              <Overlay\n                option=\"delete\"\n                title=\"Delete Report\"\n                body=\"Are you sure that you wanna delete the report?\"\n                actionforyes={this.deleteReport}\n                chatLogFunc={() => {}}\n                actionforno={() => {}}\n                document={this.state.documents[i]}\n                clearMesFunc={this.clearMessages}\n              />\n              <Overlay\n                option=\"log\"\n                title=\"Chat History\"\n                body={this.state.messages}\n                islog={true}\n                document={this.state.documents[i]}\n                chatLogFunc={this.getChatLog}\n                clearMesFunc={this.clearMessages}\n              />\n              <Overlay\n                option=\"ban\"\n                title=\"Ban player\"\n                body=\"Are you sure that you wanna ban the player?\"\n                actionforyes={this.banPlayer}\n                chatLogFunc={() => {}}\n                actionforno={this.deleteReport}\n                document={this.state.documents[i]}\n                clearMesFunc={this.clearMessages}\n              />\n            </div>\n          </div>\n        </Card>\n      );\n    }\n\n    return (\n      <div className=\"content\">\n        <h3 className=\"Title\">\n          {\"Report\"}\n          <Link to=\"/\">\n            <Button className=\"home\" variant=\"info\">\n              Home\n            </Button>\n          </Link>\n        </h3>\n\n        {card}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./Utils/ProtectedRoute\";\n\nimport LoginPage from \"./pages/LoginPage\";\nimport HomePage from \"./pages/HomePage\";\nimport ProfilePage from \"./pages/ProfilePage\";\nimport Game from \"./pages/Game\";\nimport AdminPage from \"./pages/AdminPage\";\nimport BanPage from \"./pages/BanPage\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route exact path=\"/login\" component={LoginPage} />\n            <ProtectedRoute exact path=\"/\" component={HomePage} />\n            <ProtectedRoute exact path=\"/banPage\" component={BanPage} />\n            <ProtectedRoute exact path=\"/profile\" component={ProfilePage} />\n            <ProtectedRoute exact path=\"/game/:lobbyID\" component={Game} />\n            <ProtectedRoute exact path=\"/report\" component={AdminPage} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { AuthProvider } from \"./context/auth-context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}